{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Archivos\\\\Universidad\\\\Proyecto de grado\\\\Repositorio Fishweb\\\\Fishweb-Web-Application\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nlet LoginComponent = class LoginComponent {\n  constructor(AuthService, usersService, formBuilder, router) {\n    this.AuthService = AuthService;\n    this.usersService = usersService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginF = new FormGroup({\n      email: new FormControl('', Validators.required),\n      clave: new FormControl('', Validators.required)\n    });\n  }\n\n  loggear(values) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.AuthService.login(values.email, values.clave).subscribe(data => {\n        sessionStorage.setItem(environment.TOKEN, data.data.token);\n\n        _this.AuthService.token(data.data.token, data.data.user.rolId);\n\n        _this.AuthService.getIdRol();\n\n        let rol = _this.AuthService.getIdRol();\n\n        if (rol == 1) {\n          _this.router.navigate(['/inicio-super-administrador']);\n        } else if (rol == 2) {\n          _this.router.navigate(['/inicio-administrador']);\n        } else if (rol == 3) {\n          _this.router.navigate(['/inicio-auxiliar']);\n        }\n      });\n    })();\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["D:/Archivos/Universidad/Proyecto de grado/Repositorio Fishweb/Fishweb-Web-Application/src/app/vistas/login/login.component.ts"],"names":["__decorate","Component","FormGroup","FormControl","Validators","environment","LoginComponent","constructor","AuthService","usersService","formBuilder","router","loginF","email","required","clave","loggear","values","login","subscribe","data","sessionStorage","setItem","TOKEN","token","user","rolId","getIdRol","rol","navigate","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,IAAIC,cAAc,GAAG,MAAMA,cAAN,CAAqB;AACtCC,EAAAA,WAAW,CAACC,WAAD,EAAcC,YAAd,EAA4BC,WAA5B,EAAyCC,MAAzC,EAAiD;AACxD,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAc,IAAIV,SAAJ,CAAc;AACxBW,MAAAA,KAAK,EAAE,IAAIV,WAAJ,CAAgB,EAAhB,EAAoBC,UAAU,CAACU,QAA/B,CADiB;AAExBC,MAAAA,KAAK,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,EAAoBC,UAAU,CAACU,QAA/B;AAFiB,KAAd,CAAd;AAIH;;AACKE,EAAAA,OAAO,CAACC,MAAD,EAAS;AAAA;;AAAA;AAClB,MAAA,KAAI,CAACT,WAAL,CAAiBU,KAAjB,CAAuBD,MAAM,CAACJ,KAA9B,EAAqCI,MAAM,CAACF,KAA5C,EAAmDI,SAAnD,CAA8DC,IAAD,IAAU;AACnEC,QAAAA,cAAc,CAACC,OAAf,CAAuBjB,WAAW,CAACkB,KAAnC,EAA0CH,IAAI,CAACA,IAAL,CAAUI,KAApD;;AACA,QAAA,KAAI,CAAChB,WAAL,CAAiBgB,KAAjB,CAAuBJ,IAAI,CAACA,IAAL,CAAUI,KAAjC,EAAwCJ,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeC,KAAvD;;AACA,QAAA,KAAI,CAAClB,WAAL,CAAiBmB,QAAjB;;AACA,YAAIC,GAAG,GAAG,KAAI,CAACpB,WAAL,CAAiBmB,QAAjB,EAAV;;AACA,YAAIC,GAAG,IAAI,CAAX,EAAc;AACV,UAAA,KAAI,CAACjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,6BAAD,CAArB;AACH,SAFD,MAGK,IAAID,GAAG,IAAI,CAAX,EAAc;AACf,UAAA,KAAI,CAACjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACH,SAFI,MAGA,IAAID,GAAG,IAAI,CAAX,EAAc;AACf,UAAA,KAAI,CAACjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACH;AACJ,OAdD;AADkB;AAgBrB;;AA3BqC,CAA1C;AA6BAvB,cAAc,GAAGN,UAAU,CAAC,CACxBC,SAAS,CAAC;AACN6B,EAAAA,QAAQ,EAAE,WADJ;AAENC,EAAAA,WAAW,EAAE,wBAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,uBAAD;AAHL,CAAD,CADe,CAAD,EAMxB1B,cANwB,CAA3B;AAOA,SAASA,cAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { environment } from 'src/environments/environment';\r\nlet LoginComponent = class LoginComponent {\r\n    constructor(AuthService, usersService, formBuilder, router) {\r\n        this.AuthService = AuthService;\r\n        this.usersService = usersService;\r\n        this.formBuilder = formBuilder;\r\n        this.router = router;\r\n        this.loginF = new FormGroup({\r\n            email: new FormControl('', Validators.required),\r\n            clave: new FormControl('', Validators.required),\r\n        });\r\n    }\r\n    async loggear(values) {\r\n        this.AuthService.login(values.email, values.clave).subscribe((data) => {\r\n            sessionStorage.setItem(environment.TOKEN, data.data.token);\r\n            this.AuthService.token(data.data.token, data.data.user.rolId);\r\n            this.AuthService.getIdRol();\r\n            let rol = this.AuthService.getIdRol();\r\n            if (rol == 1) {\r\n                this.router.navigate(['/inicio-super-administrador']);\r\n            }\r\n            else if (rol == 2) {\r\n                this.router.navigate(['/inicio-administrador']);\r\n            }\r\n            else if (rol == 3) {\r\n                this.router.navigate(['/inicio-auxiliar']);\r\n            }\r\n        });\r\n    }\r\n};\r\nLoginComponent = __decorate([\r\n    Component({\r\n        selector: 'app-login',\r\n        templateUrl: './login.component.html',\r\n        styleUrls: ['./login.component.css']\r\n    })\r\n], LoginComponent);\r\nexport { LoginComponent };\r\n"]},"metadata":{},"sourceType":"module"}